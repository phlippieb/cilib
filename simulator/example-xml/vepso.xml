<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <algorithm id="pso-standard" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
	    	<entityNumber value="5"/>
                <entityType class="pso.particle.StandardParticle">
                    <behaviour class="pso.behaviour.StandardParticleBehaviour">
                        <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                            <localGuideProvider class="pso.guideprovider.PBestGuideProvider"/>
                            <globalGuideProvider class="pso.guideprovider.VEPSOGuideProvider">
                                <knowledgeTransferStrategy class="algorithm.population.knowledgetransferstrategies.SelectiveKnowledgeTransferStrategy">
                                    <populationSelection class="util.selection.recipes.RingBasedPopulationSelector"/>
                                    <entitySelection class="util.selection.recipes.ElitistSelector"/>
                                </knowledgeTransferStrategy>
                            </globalGuideProvider>
                        </velocityProvider>
            		    <boundaryConstraint class="problem.boundaryconstraint.ClampingBoundaryConstraint"/>
                    </behaviour>
                </entityType>
            </initialisationStrategy>
            <iterationStrategy class="moo.iterationstrategies.ArchivingIterationStrategy">
                <archive class="moo.archive.constrained.SetBasedConstrainedArchive" capacity="10000"/>
                <iterationStrategy class="pso.iterationstrategies.SynchronousIterationStrategy"/>
            </iterationStrategy>
        </algorithm>

        <algorithm id="pso-random" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
	    	<entityNumber value="25"/>
                <entityType class="pso.particle.StandardParticle">
                    <behaviour class="pso.behaviour.StandardParticleBehaviour">
                        <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                            <localGuideProvider class="pso.guideprovider.PBestGuideProvider"/>
                            <globalGuideProvider class="pso.guideprovider.VEPSOGuideProvider">
                                <knowledgeTransferStrategy class="algorithm.population.knowledgetransferstrategies.SelectiveKnowledgeTransferStrategy">
                                    <populationSelection class="util.selection.recipes.RandomSelector"/>
                                    <entitySelection class="util.selection.recipes.ElitistSelector"/>
                                </knowledgeTransferStrategy>
                            </globalGuideProvider>
                        </velocityProvider>
    		            <boundaryConstraint class="problem.boundaryconstraint.ClampingBoundaryConstraint"/>
                    </behaviour>
                </entityType>
            </initialisationStrategy>
            <iterationStrategy class="moo.iterationstrategies.ArchivingIterationStrategy">
                <archive class="moo.archive.constrained.SetBasedConstrainedArchive" capacity="10000"/>
                <iterationStrategy class="pso.iterationstrategies.SynchronousIterationStrategy"/>
            </iterationStrategy>
        </algorithm>
        
        <algorithm id="vepso-standard-bi-swarm" class="algorithm.population.MultiPopulationCriterionBasedAlgorithm">
	    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="250"/>
            <objectiveAssignmentStrategy class="moo.criterion.objectiveassignmentstrategies.SequentialObjectiveAssignmentStrategy"/>
            <addPopulationBasedAlgorithm idref="pso-standard"/>
            <addPopulationBasedAlgorithm idref="pso-standard"/>
        </algorithm>

        <algorithm id="vepso-standard-tri-swarm" class="algorithm.population.MultiPopulationCriterionBasedAlgorithm">
	    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="250"/>
            <objectiveAssignmentStrategy class="moo.criterion.objectiveassignmentstrategies.SequentialObjectiveAssignmentStrategy"/>
            <addPopulationBasedAlgorithm idref="pso-standard"/>
            <addPopulationBasedAlgorithm idref="pso-standard"/>
            <addPopulationBasedAlgorithm idref="pso-standard"/>
        </algorithm>

        <algorithm id="vepso-random-bi-swarm" class="algorithm.population.MultiPopulationCriterionBasedAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="250"/>
            <objectiveAssignmentStrategy class="moo.criterion.objectiveassignmentstrategies.SequentialObjectiveAssignmentStrategy"/>
            <addPopulationBasedAlgorithm idref="pso-random"/>
            <addPopulationBasedAlgorithm idref="pso-random"/>
        </algorithm>

        <algorithm id="vepso-random-tri-swarm" class="algorithm.population.MultiPopulationCriterionBasedAlgorithm">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="250"/>
            <objectiveAssignmentStrategy class="moo.criterion.objectiveassignmentstrategies.SequentialObjectiveAssignmentStrategy"/>
            <addPopulationBasedAlgorithm idref="pso-random"/>
            <addPopulationBasedAlgorithm idref="pso-random"/>
            <addPopulationBasedAlgorithm idref="pso-random"/>
        </algorithm>
    </algorithms>

    <problems>
        <problem id="ZDT1" class="functions.continuous.moo.zdt.ZDT1"/>
	<problem id="ZDT2" class="functions.continuous.moo.zdt.ZDT2"/>
	<problem id="ZDT3" class="functions.continuous.moo.zdt.ZDT3"/>
	<problem id="ZDT4" class="functions.continuous.moo.zdt.ZDT4"/>
	<problem id="ZDT6" class="functions.continuous.moo.zdt.ZDT6"/>

        <problem id="WFG1" m="3" l="20" class="functions.continuous.moo.wfg.WFG1"/>
	<problem id="WFG2" m="3" l="20" class="functions.continuous.moo.wfg.WFG2"/>
	<problem id="WFG3" m="3" l="20" class="functions.continuous.moo.wfg.WFG3"/>
	<problem id="WFG4" m="3" l="20" class="functions.continuous.moo.wfg.WFG4"/>
	<problem id="WFG5" m="3" l="20" class="functions.continuous.moo.wfg.WFG5"/>
        <problem id="WFG6" m="3" l="20" class="functions.continuous.moo.wfg.WFG6"/>
        <problem id="WFG7" m="3" l="20" class="functions.continuous.moo.wfg.WFG7"/>
        <problem id="WFG8" m="3" l="20" class="functions.continuous.moo.wfg.WFG8"/>
        <problem id="WFG9" m="3" l="20" class="functions.continuous.moo.wfg.WFG9"/>
    </problems>

    <measurements id="moo-quality" class="simulator.MeasurementSuite" resolution="10">
        <addMeasurement class="measurement.single.moo.NumberOfSolutions"/>
        <addMeasurement class="measurement.single.moo.SolutionDistribution"/>
	<addMeasurement class="measurement.single.moo.ParetoFrontExtent"/>
        <addMeasurement class="measurement.multiple.moo.ParetoOptimalFront"/>
    </measurements>

    <simulations>
        <simulation samples="1">
            <algorithm idref="vepso-standard-bi-swarm"/>
            <problem idref="ZDT1"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-ZDT1.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-bi-swarm"/>
            <problem idref="ZDT2"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-ZDT2.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-bi-swarm"/>
            <problem idref="ZDT3"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-ZDT3.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-bi-swarm"/>
            <problem idref="ZDT4"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-ZDT4.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-bi-swarm"/>
            <problem idref="ZDT6"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-ZDT6.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG1"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG1.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG2"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG2.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG3"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG3.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG4"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG4.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG5"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG5.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG6"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG6.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG7"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG7.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG8"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG8.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-standard-tri-swarm"/>
            <problem idref="WFG9"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-standard-WFG9.txt"/>
        </simulation>

       
        <simulation samples="1">
            <algorithm idref="vepso-random-bi-swarm"/>
            <problem idref="ZDT1"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-ZDT1.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-bi-swarm"/>
            <problem idref="ZDT2"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-ZDT2.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-bi-swarm"/>
            <problem idref="ZDT3"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-ZDT3.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-bi-swarm"/>
            <problem idref="ZDT4"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-ZDT4.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-bi-swarm"/>
            <problem idref="ZDT6"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-ZDT6.txt"/>
        </simulation>

        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG1"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG1.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG2"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG2.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG3"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG3.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG4"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG4.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG5"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG5.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG6"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG6.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG7"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG7.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG8"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG8.txt"/>
        </simulation>
        <simulation samples="1">
            <algorithm idref="vepso-random-tri-swarm"/>
            <problem idref="WFG9"/>
            <measurements idref="moo-quality"/>
	    <output format="TXT" file="data/vepso-random-WFG9.txt"/>
        </simulation>
    </simulations>
</simulator>
