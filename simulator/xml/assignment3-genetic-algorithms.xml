<simulator>
	<algorithms>

		<!--
		genetic algorithm
		population: 5
		iterations: 2000
		 -->
		<algorithm id="gen.5.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="5"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>


        <!--
		genetic algorithm
		population: 25
		iterations: 2000
		 -->
		<algorithm id="gen.25.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="25"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 100
		iterations: 2000
		 -->
		<algorithm id="gen.100.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="100"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 500
		iterations: 2000
		 -->
		<algorithm id="gen.500.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="500"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 1000
		iterations: 2000
		 -->
		<algorithm id="gen.1000.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="1000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 3000
		iterations: 2000
		 -->
		<algorithm id="gen.3000.2000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="2000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="3000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>


        <!--
		genetic algorithm
		population: 5
		iterations: 5000
		 -->
		<algorithm id="gen.5.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="5"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>


        <!--
		genetic algorithm
		population: 25
		iterations: 5000
		 -->
		<algorithm id="gen.25.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="25"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 100
		iterations: 5000
		 -->
		<algorithm id="gen.100.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="100"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 500
		iterations: 5000
		 -->
		<algorithm id="gen.500.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="500"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 1000
		iterations: 5000
		 -->
		<algorithm id="gen.1000.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="1000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
		genetic algorithm
		population: 3000
		iterations: 5000
		 -->
		<algorithm id="gen.3000.5000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="3000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>




        <!--
        genetic algorithm
        population: 5
        iterations: 10000
         -->
        <algorithm id="gen.5.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="5"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>


        <!--
        genetic algorithm
        population: 25
        iterations: 10000
         -->
        <algorithm id="gen.25.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="25"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
        genetic algorithm
        population: 100
        iterations: 10000
         -->
        <algorithm id="gen.100.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="100"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
        genetic algorithm
        population: 500
        iterations: 10000
         -->
        <algorithm id="gen.500.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="500"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
        genetic algorithm
        population: 1000
        iterations: 10000
         -->
        <algorithm id="gen.1000.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="1000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

        <!--
        genetic algorithm
        population: 3000
        iterations: 10000
         -->
        <algorithm id="gen.3000.10000" class="ec.EC">
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="10000"/>
            <iterationStrategy class="ec.iterationstrategies.GeneticAlgorithmIterationStrategy">
                <crossover class="entity.operators.CrossoverOperator">
                    <selectionStrategy class="util.selection.recipes.TournamentSelector">
                        <tournamentSize class="controlparameter.ConstantControlParameter" parameter="0.4"/>
                    </selectionStrategy>
                    <crossoverStrategy class="entity.operators.crossover.real.ArithmeticCrossoverStrategy"/>
                    <crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </crossover>
                <mutationStrategy class="entity.operators.mutation.GaussianMutationStrategy">
                    <mutationProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                </mutationStrategy>
            </iterationStrategy>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="3000"/>
                <entityType class="ec.Individual"/>
            </initialisationStrategy>
        </algorithm>

	</algorithms>
</simulator>