<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>

<simulator>

	 <!--

        //\\ ||   //\\ //\\ ||\\ || |||| |||| \\// ////
        //\\ ||   ||\\ |||| ||// ||  ||  |\\| |\/| \\\\
        //\\ |||| \\// \\// ||\\ ||  ||  |||| |||| ////

    -->

	<algorithms>
        
		<!--
			Guide   1
		-->

        <algorithm id="g1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider_1"/>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <!--
        	Guide 	 2
        -->

        <algorithm id="g2" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        
        <algorithm id="g2.0" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.0"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider"/>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        
        <algorithm id="g2.25" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.25"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider"/>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        
        <algorithm id="g2.5" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider"/>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        
        <algorithm id="g2.75" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.75"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider"/>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        
        <algorithm id="g2.1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider2">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider"/>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <!--
        	Guide   3
        -->

        <algorithm id="g3" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<!--crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/-->
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g3.0" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.0"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g3.25" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.25"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g3.5" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.5"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g3.75" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="0.75"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g3.1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider3">
                        	<crossoverProbability class="controlparameter.ConstantControlParameter" parameter="1.0"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <!--
        	Guide   4
        -->

        <algorithm id="g4" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4"/>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g4.1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="1"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g4.5" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="5"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g4.10" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="10"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g4.15" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="15"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g4.20" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="20"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <!--
        	Guide   5
        -->

        <algorithm id="g5" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider5"/>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                        <!-- velocity provider params-->
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

        <algorithm id="g5.1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="1"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g5.5" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="5"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g5.10" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="10"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g5.15" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="15"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>
        <algorithm id="g5.20" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.ASynchronousIterationStrategy"/>
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityNumber value="20"/>
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.NewGuideProvider4">
                        	<tournamentSize class="controlparameter.ConstantControlParameter" parameter="20"/>
                        </globalGuideProvider>
                    </particleBehavior>
                    <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                    <velocityProvider class="pso.velocityprovider.StandardVelocityProvider">
                    </velocityProvider>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition" target="5000"/>
        </algorithm>

    </algorithms>

    <!--

            ||\\ ||\\ //\\ ||\\ ||   //\\ \\// ////
            ||// ||// |||| ||\\ ||   ||// |\/| \\\\
            ||   ||\\ \\// ||// |||| \\// |||| ////
    
    -->

	<problems>
        <problem id="f1.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Spherical"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f1.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Spherical"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f1.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Spherical"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>



        <problem id="f2.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.SchwefelProblem1_2"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f2.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.SchwefelProblem1_2"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f2.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.SchwefelProblem1_2"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>

        <problem id="f3.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Elliptic"/>
                    <matrixType value="orthonormal"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>
        <problem id="f3.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Elliptic"/>
                    <matrixType value="orthonormal"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>
        <problem id="f3.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Elliptic"/>
                    <matrixType value="orthonormal"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>

        <problem id="f4.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.NoisyFunctionDecorator">
                    <function class="functions.continuous.SchwefelProblem1_2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>
        <problem id="f4.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.NoisyFunctionDecorator">
                    <function class="functions.continuous.SchwefelProblem1_2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>
        <problem id="f4.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.NoisyFunctionDecorator">
                    <function class="functions.continuous.SchwefelProblem1_2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>

        <!-- The optimum is shifted to the bounds but is set in the function itself -->
        <problem id="f5.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.SchwefelProblem2_6"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-310"/-->
            </function>
        </problem>
        <problem id="f5.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.SchwefelProblem2_6"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-310"/-->
            </function>
        </problem>
        <problem id="f5.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.SchwefelProblem2_6"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-310"/-->
            </function>
        </problem>

        <problem id="f6.10" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rosenbrock"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="390"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f6.50" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rosenbrock"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="390"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>
        <problem id="f6.250" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rosenbrock"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="390"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>

        <!-- TODO: add the noise to rotation matrix-->
        <problem id="f7.10" class="problem.FunctionOptimisationProblem" domain="R(0:600)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Griewank"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="3"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-60"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-180"/-->
            </function>
        </problem>
        <problem id="f7.50" class="problem.FunctionOptimisationProblem" domain="R(0:600)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Griewank"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="3"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-60"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-180"/-->
            </function>
        </problem>
        <problem id="f7.250" class="problem.FunctionOptimisationProblem" domain="R(0:600)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Griewank"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="3"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-60"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-180"/-->
            </function>
        </problem>

        <problem id="f8.10" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Ackley"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="100"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-32"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-140"/-->
            </function>
        </problem>
        <problem id="f8.50" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Ackley"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="100"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-32"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-140"/-->
            </function>
        </problem>
        <problem id="f8.250" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Ackley"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="100"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-32"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-140"/-->
            </function>
        </problem>

        <problem id="f9.10" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rastrigin"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
            </function>
        </problem>
        <problem id="f9.50" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rastrigin"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
            </function>
        </problem><problem id="f9.250" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rastrigin"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
            </function>
        </problem>

        <problem id="f10.10" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Rastrigin"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
            </function>
        </problem>
        <problem id="f10.50" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^50">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Rastrigin"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
            </function>
        </problem>
        <problem id="f10.250" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^250">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Rastrigin"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
            </function>
        </problem>

    </problems>

    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="10">
        <addMeasurement class="measurement.single.Fitness"/>
    </measurements>

    <!--

            //// || \\// |||| ||   //\\ |||| || //\\ ||\\ ////
            \\\\ || |\/| |||| ||   //\\  ||  || |||| |||| \\\\
            //// || |||| \\// |||| //\\  ||  || \\// |||| ////
    
    -->


    <simulations>

    	<!--simulation samples="5">
            <algorithm 		idref="g1"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g1.f1.10.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g1"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g1.f1.50.txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g1"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g1.f1.250.txt"/>
        </simulation-->

        
        <simulation samples="5">
            <algorithm 		idref="g2.0"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.0.f1.10.txt"/>
        </simulation>
        <!--simulation samples="5">
            <algorithm 		idref="g2.0"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.0.f1.50 txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g2.0"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.0.f1.250 txt"/>
        </simulation-->

        <simulation samples="5">
            <algorithm 		idref="g2.25"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.25.f1.10.txt"/>
        </simulation>
        <!--simulation samples="5">
            <algorithm 		idref="g2.25"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.25.f1.50 txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g2.25"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.25.f1.250 txt"/>
        </simulation-->

        <simulation samples="5">
            <algorithm 		idref="g2.5"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.5.f1.10.txt"/>
        </simulation>
        <!--simulation samples="5">
            <algorithm 		idref="g2.5"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.5.f1.50 txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g2.5"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.5.f1.250 txt"/>
        </simulation-->

        <simulation samples="5">
            <algorithm 		idref="g2.75"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.75.f1.10.txt"/>
        </simulation>
        <!--simulation samples="5">
            <algorithm 		idref="g2.75"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.75.f1.50 txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g2.75"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.75.f1.250 txt"/>
        </simulation-->

        <simulation samples="5">
            <algorithm 		idref="g2.1"/>
            <problem 		idref="f1.10"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.1.f1.10.txt"/>
        </simulation>
        <!--simulation samples="5">
            <algorithm 		idref="g2.1"/>
            <problem 		idref="f1.50"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.1.f1.50 txt"/>
        </simulation>
        <simulation samples="5">
            <algorithm 		idref="g2.1"/>
            <problem 		idref="f1.250"/>
            <measurements 	idref="fitness"/>
            <output format="TXT" file="data/g2.1.f1.250 txt"/>
        </simulation-->

    </simulations>
</simulator>
