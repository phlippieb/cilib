<simulator>
    <problems>


    <!--
        CEC benchmark functions (I think)
    -->

		<!--
			shifted rotated ackley
		-->
        <problem id="sr-ackley.25" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^25">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Ackley"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="100"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="-32"/>
            </function>
        </problem>



        <!--
        	shifted rotated elliptic
        -->
        <problem id="sr-elliptic.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Elliptic"/>
                    <matrixType value="orthonormal"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>


        <!--
            Rotated Griewank as per CEC2013
        -->
        <problem id="r-griewank.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^10">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.ScaledFunctionDecorator">
                    <horizontalScale class="controlparameter.ConstantControlParameter" parameter="6.0" />
                    <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                        <function class="functions.continuous.decorators.IllConditionedFunctionDecorator">
                            <alpha class="controlparameter.ConstantControlParameter" parameter="100" />
                            <function class="functions.continuous.unconstrained.Griewank" />
                        </function>
                    </function>
                </function>
                <horizontalShift class="controlparameter.FixedControlParameter">
                    <controlParameter class="controlparameter.RandomControlParameter">
                        <distribution class="math.random.UniformDistribution">
                            <lowerBound class="controlparameter.ConstantControlParameter" parameter="-80.0" />
                            <upperBound class="controlparameter.ConstantControlParameter" parameter="80.0" />
                        </distribution>
                    </controlParameter>
                </horizontalShift>
                <verticalShift class="controlparameter.ConstantControlParameter" parameter="-500" />
            </function>
        </problem>


        <!--
        	shifted rotated rastrigin
        -->
        <problem id="sr-rastrigin.25" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^25">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.RotatedFunctionDecorator">
                    <function class="functions.continuous.unconstrained.Rastrigin"/>
                    <matrixType value="linear_transformation"/>
                    <condition value="2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="1"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-330"/-->
            </function>
        </problem>



        <!--
        	shifted rosenbrock
        -->
        <problem id="s-rosenbrock.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.unconstrained.Rosenbrock"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="390"/-->
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
            </function>
        </problem>



        <!--
        	shifted schwefel 1.2 with noise
        -->
        <problem id="s-schwefel1_2.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.decorators.ShiftedFunctionDecorator">
                <function class="functions.continuous.decorators.NoisyFunctionDecorator">
                    <function class="functions.continuous.SchwefelProblem1_2"/>
                </function>
                <horizontalShift class="controlparameter.ConstantControlParameter" parameter="20"/>
                <!--verticalShift class="controlparameter.ConstantControlParameter" parameter="-450"/-->
            </function>
        </problem>


    <!--
        simple functions:
    -->

        <!--
            ackley
        -->
        <problem id="ackley.25" class="problem.FunctionOptimisationProblem" domain="R(-32:32)^25">
            <function class="functions.continuous.unconstrained.Ackley"/>
        </problem>

        <!--
            alpine
        -->
        <problem id="alpine.25" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^25">
            <function class="functions.continuous.unconstrained.Alpine" />
        </problem>


        <!--
            Beale
        -->
        <problem id="beale.25" class="problem.FunctionOptimisationProblem" domain="R(-4.5:-4.5)^2">
            <function class="functions.continuous.unconstrained.Beale" />
        </problem>


        <!--
            Egg Holder
        -->
        <problem id="eggholder.25" class="problem.FunctionOptimisationProblem" domain="R(-512:512)^25">
            <function class="functions.continuous.unconstrained.EggHolder" />
        </problem>


        <!--
            Elliptic
        -->
        <problem id="elliptic.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.unconstrained.Elliptic"/>
        </problem>


        <!--
            Goldstein Price
        -->
        <problem id="goldsteinprice.25" class="problem.FunctionOptimisationProblem" domain="R(-2:2)^2">
            <function class="functions.continuous.unconstrained.GoldsteinPrice" />
        </problem>



        <!--
            Griewank
        -->
        <problem id="griewank.25" class="problem.FunctionOptimisationProblem" domain="R(-600:600)^25">
            <function class="functions.continuous.unconstrained.Griewank" />
        </problem>



        <!--
            Levy
        -->
        <problem id="levy.25" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^25">
            <function class="functions.continuous.unconstrained.Levy" />
        </problem>


        <!--
            Michalewicz
        -->
        <problem id="michalewicz.25" class="problem.FunctionOptimisationProblem" domain="R(0:3.141592653589793)^25">
            <function class="functions.continuous.unconstrained.Michalewicz" />
        </problem>



        <!--
            Quadric
        -->
        <problem id="quadric.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.unconstrained.Quadric" />
        </problem>


        <!--
            Quartic
        -->
        <problem id="quartic.25" class="problem.FunctionOptimisationProblem" domain="R(-1.28:1.28)^25">
            <function class="functions.continuous.unconstrained.Quartic" />
        </problem>

        <!--
            Rastrigin
        -->
        <problem id="rastrigin.25" class="problem.FunctionOptimisationProblem" domain="R(-5.12:5.12)^25">
            <function class="functions.continuous.unconstrained.Rastrigin"/>
        </problem>


        <!--
            Rosenbrock
        -->
        <problem id="rosenbrock.25" class="problem.FunctionOptimisationProblem" domain="R(-2.048:2.048)^25">
            <function class="functions.continuous.unconstrained.Rosenbrock"/>
        </problem>


        <!--
            Salomon
        -->
        <problem id="salomon.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.unconstrained.Salomon" />
        </problem>


        <!--
            Schwefel 1.2
        -->
        <problem id="schwefel1_2.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.SchwefelProblem1_2"/>
        </problem>



        <!--
            Schwefel 2.22
        -->
        <problem id="schwefel2_22.25" class="problem.FunctionOptimisationProblem" domain="R(-10:10)^25">
            <function class="functions.continuous.unconstrained.SchwefelProblem2_22" />
        </problem>


        <!--
            Schwefel 2.26
        -->
        <problem id="schwefel2_26.25" class="problem.FunctionOptimisationProblem" domain="R(-500:500)^25">
            <function class="functions.continuous.SchwefelProblem2_26" />
        </problem>


        <!--
            Six-hump camel back
        -->
        <problem id="sixhump.25" class="problem.FunctionOptimisationProblem" domain="R(-5:5)^2">
            <function class="functions.continuous.unconstrained.SixHumpCamelBack" />
        </problem>


        <!--
            Spherical
        -->
        <problem id="spherical.25" class="problem.FunctionOptimisationProblem" domain="R(-100:100)^25">
            <function class="functions.continuous.unconstrained.Spherical" />
        </problem>


        <!--
            Step
        -->
        <problem id="step.25" class="problem.FunctionOptimisationProblem" domain="R(-20:20)^25">
            <function class="functions.continuous.unconstrained.Step" />
        </problem>


        <!--
            Weierstrass
        -->
        <problem id="weierstrass.25" class="problem.FunctionOptimisationProblem" domain="R(0.5:0.5)^25">
            <function class="functions.continuous.unconstrained.Weierstrass" />
        </problem>



        <!--
            Zakharov
        -->
        <problem id="zakharov.25" class="problem.FunctionOptimisationProblem" domain="R(-5:10)^25">
            <function class="functions.continuous.unconstrained.Zakharov" />
        </problem>

    </problems>
</simulator>